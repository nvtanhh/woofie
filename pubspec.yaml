name: meowoof
description: Social network for pet

# The following line prevents the package from being accidentally published to
# pub.dev using `pub publish`. This is preferred for private packages.
publish_to: 'none' # Remove this line if you wish to publish to pub.dev

# The following defines the version and build number for your application.
# A version number is three numbers separated by dots, like 1.2.43
# followed by an optional build number separated by a +.
# Both the version and the builder number may be overridden in flutter
# build by specifying --build-name and --build-number, respectively.
# In Android, build-name is used as versionName while build-number used as versionCode.
# Read more about Android versioning at https://developer.android.com/studio/publish/versioning
# In iOS, build-name is used as CFBundleShortVersionString while build-number used as CFBundleVersion.
# Read more about iOS versioning at
# https://developer.apple.com/library/archive/documentation/General/Reference/InfoPlistKeyReference/Articles/CoreFoundationKeys.html
version: 1.0.0+1

environment:
  sdk: ">=2.7.0 <3.0.0"

dependencies:
  flutter:
    sdk: flutter
  # retrofit.dart is an dio client generator using source_gen and inspired by Chopper and Retrofit.
  retrofit: ^1.3.4

  # Automatically generate code for converting to and from JSON by annotating Dart classes.
  json_serializable: ^3.4.1

  # Classes and helper functions that support JSON code generation via the `json_serializable` package.
  json_annotation: ^3.0.1

  # Simple direct Service Locator that allows to decouple the interface from a concrete implementation and to access the concrete implementation from everywhere in your App"
  get_it: ^5.0.0

  # Injectable is a convenient code generator for get_it. Inspired by Angular DI, Guice DI and inject.dart.
  injectable: ^1.0.5

  # Suga Core Package.
  suga_core: ^0.3.2

  # Open screens/snackbars/dialogs without context, manage states and inject dependencies easily with GetX.
  get: ^3.6.2

  # Easy and Fast internationalizing and localization your Flutter Apps, this package simplify the internationalizing process.
  easy_localization: ^2.3.3

  # A simple Event Bus using Dart Streams for decoupling applications
  event_bus: ^1.1.1

  #A flutter plugin for adapting screen and font size.Let your UI display a reasonable layout on different screen sizes!
  flutter_screenutil: ^4.0.3+1
  # The following adds the Cupertino Icons font to your application.
  # Use with the CupertinoIcons class for iOS style icons.
  cupertino_icons: ^1.0.0
  #email validate
  email_validator: ^1.0.6
  #The hasura_connect is designed to facilitate Hasura's integration with Flutter applications, leveraging the full power of Graphql.
  hasura_connect: ^2.0.1
dev_dependencies:
  flutter_test:
    sdk: flutter
  # An opiniated, community-driven set of lint rules for Dart and Flutter projects. Like pedantic but stricter
  lint: ^1.2.0
  # A build system for Dart code generation and modular compilation.
  build_runner: ^1.10.1

  # Injectable is a convenient code generator for get_it. Inspired by Angular DI, Guice DI and inject.dart.
  injectable_generator: ^1.0.4

  # retrofit generator is an dio client generator using source_gen and inspired by Chopper and Retrofit.
  retrofit_generator: ^1.3.7+6

  # The Flutter code generator for your assets, fonts, colors, … — Get rid of all String-based APIs.
  flutter_gen: ^1.2.0
  firebase_core: ^0.7.0
  firebase_auth: ^0.20.1
  google_sign_in: ^4.5.9
  flutter_facebook_auth: ^2.0.2+1
# For information on the generic Dart part of this file, see the
# following page: https://dart.dev/tools/pub/pubspec
flutter_gen:
  output: lib/
# The following section is specific to Flutter.
flutter:

  # The following line ensures that the Material Icons font is
  # included with your application, so that you can use the icons in
  # the material Icons class.
  uses-material-design: true
  assets:
    - resources/langs/
    - resources/icons/
  # To add assets to your application, add an assets section, like this:
  # assets:
  #   - images/a_dot_burr.jpeg
  #   - images/a_dot_ham.jpeg

  # An image asset can refer to one or more resolution-specific "variants", see
  # https://flutter.dev/assets-and-images/#resolution-aware.

  # For details regarding adding assets from package dependencies, see
  # https://flutter.dev/assets-and-images/#from-packages

  # To add custom fonts to your application, add a fonts section here,
  # in this "flutter" section. Each entry in this list should have a
  # "family" key with the font family name, and a "fonts" key with a
  # list giving the asset and other descriptors for the font. For
  # example:
  # fonts:
  #   - family: Schyler
  #     fonts:
  #       - asset: fonts/Schyler-Regular.ttf
  #       - asset: fonts/Schyler-Italic.ttf
  #         style: italic
  #   - family: Trajan Pro
  #     fonts:
  #       - asset: fonts/TrajanPro.ttf
  #       - asset: fonts/TrajanPro_Bold.ttf
  #         weight: 700
  #
  # For details regarding fonts from package dependencies,
  # see https://flutter.dev/custom-fonts/#from-packages
