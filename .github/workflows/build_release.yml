name: Build + Deploy Production

on:
  push:
    branches: ["main"]

  workflow_dispatch:

jobs:
  build:
    name: Build app
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Update app version
        run: sh auto_versioning.sh

      - name: Setup Java
        uses: actions/setup-java@v2
        with:
          distribution: "zulu"
          java-version: "12.x"
          cache: "gradle"

      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: "2.10.0"
          cache: true

      - name: Prepare to build
        run: flutter pub get

      - name: Download Android keystore
        id: android_keystore
        uses: timheuer/base64-to-file@v1.0.3
        with:
          fileName: upload-keystore.jks
          encodedString: ${{ secrets.KEYSTORE_BASE64 }}

      - name: Create key.properties
        run: |
          echo "storeFile=${{ steps.android_keystore.outputs.filePath }}" > android/key.properties
          echo "storePassword=${{ secrets.STORE_PASSWORD }}" >> android/key.properties
          echo "keyPassword=${{ secrets.KEY_PASSWORD }}" >> android/key.properties
          echo "keyAlias=${{ secrets.KEY_ALIAS }}" >> android/key.properties

      # - name: Create .env file
      #   run: |
      #     echo "${{ secrets.ENV_STAGING }}" > .env

      - name: Build Android
        run: flutter build appbundle

      - name: Upload Android Build
        uses: actions/upload-artifact@v2
        with:
          name: android-release
          path: build/app/outputs/bundle/release/app-release.aab

  deploy:
    name: Deploy to Internal Test
    runs-on: ubuntu-latest
    needs: build
    steps:
      - uses: actions/checkout@v3

      - name: Get Android Build from artifacts
        uses: actions/download-artifact@v2
        with:
          name: android-release

      - name: Release Build to internal track
        uses: r0adkll/upload-google-play@v1
        with:
          serviceAccountJsonPlainText: ${{ secrets.GPLAY_ACCOUNT_KEY }}
          packageName: "com.nrole.wowther"
          releaseFiles: app-release.aab
          track: internal
          status: completed
          changesNotSentForReview: true

  bump_version:
    name: Bump version
    runs-on: ubuntu-latest
    needs: build
    steps:
      - uses: actions/checkout@v3

      - name: Version the app
        id: version
        run: |
          sh auto_versioning.sh
          echo "::set-output name=new-version::$(grep 'version: ' ./pubspec.yaml | cut -d ' ' -f 2)"

      - name: Tag the version
        uses: mathieudutour/github-tag-action@v6.1
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          custom_tag: ${{ steps.version.outputs.new-version }}
          tag_prefix: "release-"

      - name: Raise PR to bump version
        id: raise_pr
        uses: peter-evans/create-pull-request@v4.2.1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          commit-message: "[no ci] ðŸ”– Bump release version to ${{ steps.version.outputs.new-version }}"
          delete-branch: true
          title: "ðŸ”– Bump version to ${{ steps.version.outputs.new-version }}"
          body: ${{github.event.head_commit.message}}
          add-paths: pubspec.yaml
          branch: "bump-version"
          base: "main"
          labels: "automerge"

      - name: Approve Pull Request
        uses: juliangruber/approve-pull-request-action@v1
        with:
          github-token: ${{ secrets.APPROVE_PR_TOKEN }}
          number: ${{ steps.raise_pr.outputs.pull-request-number }}

      - name: Merge Pull request
        uses: juliangruber/merge-pull-request-action@v1
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          number: ${{ steps.raise_pr.outputs.pull-request-number }}
          method: squash
